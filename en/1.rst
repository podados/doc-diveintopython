Chapter 1. Installing Python
=============================

Welcome to Python. Let's dive in. In this chapter, you'll install the version
of Python that's right for you.

1.1. Which Python is right for you?
------------------------------------



The first thing you need to do with Python is install it. Or do you?

If you're using an account on a hosted server, your ISP may have already
installed Python. Most popular Linux distributions come with Python in the
default installation. Mac OS X 10.2 and later includes a command-line version
of Python, although you'll probably want to install a version that includes a
more Mac-like graphical interface.

Windows does not come with any version of Python, but don't despair! There are
several ways to point-and-click your way to Python on Windows.

As you can see already, Python runs on a great many operating systems. The full
list includes Windows, Mac OS, Mac OS X, and all varieties of free UNIX
-compatible systems like Linux. There are also versions that run on Sun
Solaris, AS/400, Amiga, OS/2, BeOS, and a plethora of other platforms you've
probably never even heard of.

What's more, Python programs written on one platform can, with a little care,
run on any supported platform. For instance, I regularly develop Python
programs on Windows and later deploy them on Linux.

So back to the question that started this section, "Which Python is right for
you?" The answer is whichever one runs on the computer you already have.

1.2. Python on Windows
-----------------------



On Windows, you have a couple choices for installing Python.

ActiveState makes a Windows installer for Python called ActivePython, which
includes a complete version of Python, an IDE with a Python-aware code editor,
plus some Windows extensions for Python that allow complete access to
Windows-specific services, APIs, and the Windows Registry.

ActivePython is freely downloadable, although it is not open source. It is the
IDE I used to learn Python, and I recommend you try it unless you have a
specific reason not to. One such reason might be that ActiveState is generally
several months behind in updating their ActivePython installer when new version
of Python are released. If you absolutely need the latest version of Python and
ActivePython is still a version behind as you read this, you'll want to use the
second option for installing Python on Windows.

The second option is the "official" Python installer, distributed by the people
who develop Python itself. It is freely downloadable and open source, and it is
always current with the latest version of Python.

Procedure 1.1. Option 1: Installing ActivePython

Here is the procedure for installing ActivePython:
   
 1. Download ActivePython from http://www.activestate.com/Products/ActivePython/
    .
   
 2. If you are using Windows 95, Windows 98, or Windows ME, you will also need
    to download and install Windows Installer 2.0 (http://
    download.microsoft.com/download/WindowsInstaller/Install/2.0/W9XMe/EN-US/
    InstMsiA.exe) before installing ActivePython.
   
 3. Double-click the installer, ActivePython-2.2.2-224-win32-ix86.msi.
   
 4. Step through the installer program.
   
 5. If space is tight, you can do a custom installation and deselect the
    documentation, but I don't recommend this unless you absolutely can't spare
    the 14MB.
   
 6. After the installation is complete, close the installer and choose Start->
    Programs->ActiveState ActivePython 2.2->PythonWin IDE. You'll see something
    like the following:
   



::

    PythonWin 2.2.2 (#37, Nov 26 2002, 10:24:37) [MSC 32 bit (Intel)] on win32.
    Portions Copyright 1994-2001 Mark Hammond (mhammond@skippinet.com.au) -
    see 'Help/About PythonWin' for further copyright information.
    >>> 



Procedure 1.2. Option 2: Installing Python from Python.org (http://
www.python.org/)
   
 1. Download the latest Python Windows installer by going to http://
    www.python.org/ftp/python/ and selecting the highest version number listed,
    then downloading the .exe installer.
   
 2. Double-click the installer, Python-2.xxx.yyy.exe. The name will depend on
    the version of Python available when you read this.
   
 3. Step through the installer program.
   
 4. If disk space is tight, you can deselect the HTMLHelp file, the utility
    scripts (Tools/), and/or the test suite (Lib/test/).
   
 5. If you do not have administrative rights on your machine, you can select
    Advanced Options, then choose Non-Admin Install. This just affects where
    Registry entries and Start menu shortcuts are created.
   
 6. After the installation is complete, close the installer and select Start->
    Programs->Python 2.3->IDLE (Python GUI). You'll see something like the
    following:
   



::

    Python 2.3.2 (#49, Oct  2 2003, 20:02:00) [MSC v.1200 32 bit (Intel)] on win32
    Type "copyright", "credits" or "license()" for more information.
    
        ****************************************************************
        Personal firewall software may warn about the connection IDLE
        makes to its subprocess using this computer's internal loopback
        interface.  This connection is not visible on any external
        interface and no data is sent to or received from the Internet.
        ****************************************************************
        
    IDLE 1.0
    >>> 



1.3. Python on Mac OS X
------------------------



On Mac OS X, you have two choices for installing Python: install it, or don't
install it. You probably want to install it.

Mac OS X 10.2 and later comes with a command-line version of Python
preinstalled. If you are comfortable with the command line, you can use this
version for the first third of the book. However, the preinstalled version does
not come with an XML parser, so when you get to the XML chapter, you'll need to
install the full version.

Rather than using the preinstalled version, you'll probably want to install the
latest version, which also comes with a graphical interactive shell.

Procedure 1.3. Running the Preinstalled Version of Python on Mac OS X

To use the preinstalled version of Python, follow these steps:
   
 1. Open the /Applications folder.
   
 2. Open the Utilities folder.
   
 3. Double-click Terminal to open a terminal window and get to a command line.
   
 4. Type python at the command prompt.
   


Try it out:


::

    Welcome to Darwin!
    [localhost:~] you% python
    Python 2.2 (#1, 07/14/02, 23:25:09)
    [GCC Apple cpp-precomp 6.14] on darwin
    Type "help", "copyright", "credits", or "license" for more information.
    >>> [press Ctrl+D to get back to the command prompt]
    [localhost:~] you% 



Procedure 1.4. Installing the Latest Version of Python on Mac OS X

Follow these steps to download and install the latest version of Python:
   
 1. Download the MacPython-OSX disk image from http://homepages.cwi.nl/~jack/
    macpython/download.html.
   
 2. If your browser has not already done so, double-click
    MacPython-OSX-2.3-1.dmg to mount the disk image on your desktop.
   
 3. Double-click the installer, MacPython-OSX.pkg.
   
 4. The installer will prompt you for your administrative username and password.
   
 5. Step through the installer program.
   
 6. After installation is complete, close the installer and open the /
    Applications folder.
   
 7. Open the MacPython-2.3 folder
   
 8. Double-click PythonIDE to launch Python.
   


The MacPython IDE should display a splash screen, then take you to the
interactive shell. If the interactive shell does not appear, select Window->
Python Interactive (Cmd-0). The opening window will look something like this:


::

    Python 2.3 (#2, Jul 30 2003, 11:45:28)
    [GCC 3.1 20020420 (prerelease)]
    Type "copyright", "credits" or "license" for more information.
    MacPython IDE 1.0.1
    >>> 



Note that once you install the latest version, the pre-installed version is
still present. If you are running scripts from the command line, you need to be
aware which version of Python you are using.


Example 1.1. Two versions of Python
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



.. sourcecode:: python

    [localhost:~] you% python
    Python 2.2 (#1, 07/14/02, 23:25:09)
    [GCC Apple cpp-precomp 6.14] on darwin
    Type "help", "copyright", "credits", or "license" for more information.
    >>> [press Ctrl+D to get back to the command prompt]
    [localhost:~] you% /usr/local/bin/python
    Python 2.3 (#2, Jul 30 2003, 11:45:28)
    [GCC 3.1 20020420 (prerelease)] on darwin
    Type "help", "copyright", "credits", or "license" for more information.
    >>> [press Ctrl+D to get back to the command prompt]
    [localhost:~] you% 



1.4. Python on Mac OS 9
------------------------



Mac OS 9 does not come with any version of Python, but installation is very
simple, and there is only one choice.

Follow these steps to install Python on Mac OS 9:
   
 1. Download the MacPython23full.bin file from http://homepages.cwi.nl/~jack/
    macpython/download.html.
   
 2. If your browser does not decompress the file automatically, double-click
    MacPython23full.bin to decompress the file with Stuffit Expander.
   
 3. Double-click the installer, MacPython23full.
   
 4. Step through the installer program.
   
 5. AFter installation is complete, close the installer and open the /
    Applications folder.
   
 6. Open the MacPython-OS9 2.3 folder.
   
 7. Double-click Python IDE to launch Python.
   


The MacPython IDE should display a splash screen, and then take you to the
interactive shell. If the interactive shell does not appear, select Window->
Python Interactive (Cmd-0). You'll see a screen like this:


::

    Python 2.3 (#2, Jul 30 2003, 11:45:28)
    [GCC 3.1 20020420 (prerelease)]
    Type "copyright", "credits" or "license" for more information.
    MacPython IDE 1.0.1
    >>> 



1.5. Python on RedHat Linux
----------------------------



Installing under UNIX-compatible operating systems such as Linux is easy if
you're willing to install a binary package. Pre-built binary packages are
available for most popular Linux distributions. Or you can always compile from
source.

Download the latest Python RPM by going to http://www.python.org/ftp/python/
and selecting the highest version number listed, then selecting the rpms/
directory within that. Then download the RPM with the highest version number.
You can install it with the rpm command, as shown here:


Example 1.2. Installing on RedHat Linux 9
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



.. sourcecode:: python

    localhost:~$ su -
    Password: [enter your root password]
    [root@localhost root]# wget http://python.org/ftp/python/2.3/rpms/redhat-9/python2.3-2.3-5pydotorg.i386.rpm
    Resolving python.org... done.
    Connecting to python.org[194.109.137.226]:80... connected.
    HTTP request sent, awaiting response... 200 OK
    Length: 7,495,111 [application/octet-stream]
    ...
    [root@localhost root]# rpm -Uvh python2.3-2.3-5pydotorg.i386.rpm
    Preparing...                ########################################### [100%]
       1:python2.3              ########################################### [100%]
    [root@localhost root]# python          (1)
    Python 2.2.2 (#1, Feb 24 2003, 19:13:11)
    [GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-4)] on linux2
    Type "help", "copyright", "credits", or "license" for more information.
    >>> [press Ctrl+D to exit]
    [root@localhost root]# python2.3       (2)
    Python 2.3 (#1, Sep 12 2003, 10:53:56)
    [GCC 3.2.2 20030222 (Red Hat Linux 3.2.2-5)] on linux2
    Type "help", "copyright", "credits", or "license" for more information.
    >>> [press Ctrl+D to exit]
    [root@localhost root]# which python2.3 (3)
    /usr/bin/python2.3



(1) Whoops! Just typing python gives you the older version of Python -- the one
    that was installed by default. That's not the one you want.
(2) At the time of this writing, the newest version is called python2.3. You'll
    probably want to change the path on the first line of the sample scripts to
    point to the newer version.
(3) This is the complete path of the newer version of Python that you just
    installed. Use this on the #! line (the first line of each script) to
    ensure that scripts are running under the latest version of Python, and be
    sure to type python2.3 to get into the interactive shell.

1.6. Python on Debian GNU/Linux
--------------------------------



If you are lucky enough to be running Debian GNU/Linux, you install Python
through the apt command.


Example 1.3. Installing on Debian GNU/Linux
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



.. sourcecode:: python

    localhost:~$ su -
    Password: [enter your root password]
    localhost:~# apt-get install python
    Reading Package Lists... Done
    Building Dependency Tree... Done
    The following extra packages will be installed:
      python2.3
    Suggested packages:
      python-tk python2.3-doc
    The following NEW packages will be installed:
      python python2.3
    0 upgraded, 2 newly installed, 0 to remove and 3 not upgraded.
    Need to get 0B/2880kB of archives.
    After unpacking 9351kB of additional disk space will be used.
    Do you want to continue? [Y/n] Y
    Selecting previously deselected package python2.3.
    (Reading database ... 22848 files and directories currently installed.)
    Unpacking python2.3 (from .../python2.3_2.3.1-1_i386.deb) ...
    Selecting previously deselected package python.
    Unpacking python (from .../python_2.3.1-1_all.deb) ...
    Setting up python (2.3.1-1) ...
    Setting up python2.3 (2.3.1-1) ...
    Compiling python modules in /usr/lib/python2.3 ...
    Compiling optimized python modules in /usr/lib/python2.3 ...
    localhost:~# exit
    logout
    localhost:~$ python
    Python 2.3.1 (#2, Sep 24 2003, 11:39:14)
    [GCC 3.3.2 20030908 (Debian prerelease)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> [press Ctrl+D to exit]



1.7. Python Installation from Source
-------------------------------------



If you prefer to build from source, you can download the Python source code
from http://www.python.org/ftp/python/. Select the highest version number
listed, download the .tgz file), and then do the usual configure, make, make
install dance.


Example 1.4. Installing from source
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



.. sourcecode:: python

    localhost:~$ su -
    Password: [enter your root password]
    localhost:~# wget http://www.python.org/ftp/python/2.3/Python-2.3.tgz
    Resolving www.python.org... done.
    Connecting to www.python.org[194.109.137.226]:80... connected.
    HTTP request sent, awaiting response... 200 OK
    Length: 8,436,880 [application/x-tar]
    ...
    localhost:~# tar xfz Python-2.3.tgz
    localhost:~# cd Python-2.3
    localhost:~/Python-2.3# ./configure
    checking MACHDEP... linux2
    checking EXTRAPLATDIR...
    checking for --without-gcc... no
    ...
    localhost:~/Python-2.3# make
    gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
    -I. -I./Include  -DPy_BUILD_CORE -o Modules/python.o Modules/python.c
    gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
    -I. -I./Include  -DPy_BUILD_CORE -o Parser/acceler.o Parser/acceler.c
    gcc -pthread -c -fno-strict-aliasing -DNDEBUG -g -O3 -Wall -Wstrict-prototypes
    -I. -I./Include  -DPy_BUILD_CORE -o Parser/grammar1.o Parser/grammar1.c
    ...
    localhost:~/Python-2.3# make install
    /usr/bin/install -c python /usr/local/bin/python2.3
    ...
    localhost:~/Python-2.3# exit
    logout
    localhost:~$ which python
    /usr/local/bin/python
    localhost:~$ python
    Python 2.3.1 (#2, Sep 24 2003, 11:39:14)
    [GCC 3.3.2 20030908 (Debian prerelease)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> [press Ctrl+D to get back to the command prompt]
    localhost:~$ 



1.8. The Interactive Shell
---------------------------



Now that you have Python installed, what's this interactive shell thing you're
running?

It's like this: Python leads a double life. It's an interpreter for scripts
that you can run from the command line or run like applications, by
double-clicking the scripts. But it's also an interactive shell that can
evaluate arbitrary statements and expressions. This is extremely useful for
debugging, quick hacking, and testing. I even know some people who use the
Python interactive shell in lieu of a calculator!

Launch the Python interactive shell in whatever way works on your platform, and
let's dive in with the steps shown here:


Example 1.5. First Steps in the Interactive Shell
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



.. sourcecode:: python

    >>> 1 + 1               (1)
    2
    >>> print 'hello world' (2)
    hello world
    >>> x = 1               (3)
    >>> y = 2
    >>> x + y
    3



(1) The Python interactive shell can evaluate arbitrary Python expressions,
    including any basic arithmetic expression.
(2) The interactive shell can execute arbitrary Python statements, including
    the print statement.
(3) You can also assign values to variables, and the values will be remembered
    as long as the shell is open (but not any longer than that).

1.9. Summary
-------------



You should now have a version of Python installed that works for you.

Depending on your platform, you may have more than one version of Python
intsalled. If so, you need to be aware of your paths. If simply typing python
on the command line doesn't run the version of Python that you want to use, you
may need to enter the full pathname of your preferred version.

Congratulations, and welcome to Python.

